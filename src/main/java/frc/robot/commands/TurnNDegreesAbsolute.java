// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.commands;

import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.Robot;
import frc.robot.subsystems.Drivetrain;
import frc.robot.subsystems.Shifters;

/**
 *
 */
public class TurnNDegreesAbsolute extends CommandBase {

    private double m_degrees;
    private Drivetrain m_drivetrain;
    private Shifters m_shifters;
    private double drivespeed;

    public TurnNDegreesAbsolute(double degrees, Drivetrain drivetrain, Shifters shifters) {
        m_degrees = degrees;
        m_drivetrain = drivetrain;
        m_shifters = shifters;

        addRequirements(m_drivetrain, m_shifters);
    }

    // Called just before this Command runs the first time
    @Override
    public void initialize() {
        m_shifters.shiftLow();
        // m_drivetrain.setBrakeMode();

        withTimeout(5);
        m_drivetrain.pidController.setSetpoint(m_degrees);
        m_drivetrain.pidController.enableContinuousInput(-180, 180);
        m_drivetrain.pidController.setTolerance(1);
        

    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    public void execute() {
        
        drivespeed = m_drivetrain.pidController.calculate(m_drivetrain.getGyroYaw());
        // if(drivespeed < .25 && drivespeed >= .05)
        //     drivespeed = .25;
        // else if(drivespeed > -.25 && drivespeed <= -.05)
        //     drivespeed = -.25;

        m_drivetrain.run(-drivespeed, drivespeed);
        
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    public boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    public void end(boolean interrupted) {
        m_shifters.shiftHigh();
        // Robot.drivetrain.setCoastMode();
        m_drivetrain.stop();
    }

    public double getCurrentOutput() {
        return drivespeed;
    }
}
