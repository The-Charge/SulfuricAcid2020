// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj2.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;

import javax.print.attribute.standard.OutputDeviceAssigned;

import com.fasterxml.jackson.databind.ser.impl.FailingSerializer;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.DigitalInput;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class BallSensor implements Subsystem {

boolean in = false;
boolean out = false;
private static int output = 1;
private static int GainedTemp = 1;
private static int LostTemp = 1;
private static int GainedBalls = 0;
private static int LostBalls = 0;
public Indexer m_indexer;
public Stopper m_stopper;

    

    public BallSensor(Indexer indexer, Stopper stopper) {
    setDefaultCommand(new BallCounter(this));
    m_indexer = indexer;
    m_stopper = stopper;
    }
    

    @Override
    public void periodic() {
        // Put code here to be run every loop
}

public void setBallsgained(){
    //sets the balls gained and lost to 0
    //sets the temp values for gained and lost to 1
    GainedTemp = 1;
    LostTemp = 1;
    GainedBalls = 0;
    LostBalls = 0;
}
public void countballs(){
    //when the indexer senses a ball has gone into it, the balls gained is increased
    if (m_indexer.ballSensedIn()){
        GainedBalls = GainedTemp;
    }
    else if (GainedBalls == GainedTemp &&  m_indexer.ballSensedIn() == false)GainedTemp++;
    //increments gainedtemp when it is equal to the balls gained and ball sensedin is false
    //this will allow the gainedballs to increment by 1 when a ball is sensedin
   
    //when the stopper sense a ball has left it, the balls lost is increased
if (!m_stopper.ballSensedOut()){
        LostBalls = LostTemp;
    }
    else if (LostBalls == LostTemp && m_stopper.ballSensedOut())LostTemp++;
//increments losttemp when it is equal to the balls lost and ball sensedout is false
    //this will allow the lostballs to increment by 1 when a ball is sensedout



output = GainedBalls - LostBalls;   //this outputs the amount of total balls in the robot
if(output < 0){ //if lostballs > gainedballs
    output= 0;
}
System.out.println(output);
    SmartDashboard.putNumber("Ball Count ",output); //puts number of balls on the smartdashboard

}
public static int getOutput()   //getter for the output data member
{
    return output;
}
}

